name: Build, Test, and Deploy with Cache

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-frontend:
    name: Build and Test Frontend with Docker Cache
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker Layers for Frontend
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-frontend
          key: ${{ runner.os }}-docker-frontend-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-frontend-

      - name: Build Frontend Docker Image
        run: |
          docker buildx build \
            --cache-to=type=local,dest=/tmp/.buildx-cache-frontend \
            --cache-from=type=local,src=/tmp/.buildx-cache-frontend \
            -t angular-frontend:latest \
            -f angular-frontend/Dockerfile ./angular-frontend

      - name: List Docker Images
        run: docker images

      - name: Run Frontend Tests
        run: |
          docker run --rm angular-frontend:latest npm test -- --watch=false

  build-backend:
    name: Build and Test Backend with Docker Cache
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker Layers for Backend
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-backend
          key: ${{ runner.os }}-docker-backend-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-backend-

      - name: Build Backend Docker Image
        run: |
          docker buildx build \
            --cache-to=type=local,dest=/tmp/.buildx-cache-backend \
            --cache-from=type=local,src=/tmp/.buildx-cache-backend \
            -t fastapi-backend:latest \
            -f fastapi-backend/Dockerfile ./fastapi-backend

      - name: List Docker Images
        run: docker images

      - name: Run Backend Tests
        run: |
          docker run --rm -v $PWD/fastapi-backend:/app -w /app fastapi-backend:latest pytest .

  deploy:
    name: Deploy Locally
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]

    steps:
      - name: Deploy Frontend and Backend
        run: |
          echo "Frontend Docker Image: angular-frontend:latest"
          echo "Backend Docker Image: fastapi-backend:latest"
          echo "Simulating deployment process..."
